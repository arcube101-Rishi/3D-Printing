################################################################################
# ~~~~~~~~~~~~~~~~~~~~~~~~  AUTOCREATED WITH KIAUH  ~~~~~~~~~~~~~~~~~~~~~~~~~~ #
################################################################################
# Recommended macros and config entries if you use Mainsail or Fluidd!         #
# You can edit or delete those macros if you already defined them elsewhere!   #
################################################################################
[gcode_arcs]
resolution: 1.0


[gcode_macro INITIALIZE_VARIABLE]
gcode:
  {% if 'VARIABLE' not in params %}
    {action_respond_info("Missing VARIABLE parameter")}
  {% elif 'VALUE' not in params %}
    {action_respond_info("Missing VALUE parameter")}
  {% else %}
    {% set svv = printer.save_variables.variables %}
    {% if params.VARIABLE not in svv %}
      {% set escaped = params.VALUE|replace("\"", "\\\"") %}
      SAVE_VARIABLE VARIABLE={params.VARIABLE} VALUE="{escaped}"
    {% endif %}
  {% endif %}


[gcode_macro G29]
;variable_parameter_T_EXTRUDER: 190
gcode:
  {% set t = printer.heater_bed.target|default(60)|float %}

  #{% if printer.idle_timeout.state == "Printing" %}
    #{action_respond_info("This command cannot be used while printing")}
  #{% elif printer.toolhead.homed_axes != "xyz" %}
   # {action_respond_info("Please home XYZ first")}
  #{% else %}
    SAVE_GCODE_STATE NAME=g29_state
    G90
    G1 Z10 F240
    {% if t > 30.0 %}
      M190 S{t}
    {% endif %}
    BED_MESH_CALIBRATE
    BED_MESH_OUTPUT
    #{% if 'S' in params %}
     # M140 S{params.S}
    #{% endif %}
    G90
    G1 Z10 F240
    #G1 X10 Y-5 F6000
    RESTORE_GCODE_STATE NAME=g29_state MOVE=0
    ;M109 S{T_EXTRUDER}
    ;PURGE_LINE
  #{% endif %}

[gcode_macro DUMP_VARS]
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { action_respond_info("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) }
      {% endfor %}
   {% endfor %}

  
[pause_resume]

[display_status]

[gcode_macro START_PRINT]
variable_T_BED:60
variable_T_EXTRUDER:200
gcode:
    {% set T_BED = printer.heater_bed.target|default(60)|float %} #cura
    #{% set T_BED = params.T_BED|default(60)|float %} #superslicer
    {% set T_EXTRUDER = printer.extruder.target|default(190)|float %} #cura
    #{% set T_EXTRUDER = params.T_EXTRUDER|default(200)|float %} #superslicer
    # Start bed heating
    M140 S{T_BED}
	M104 S(T_EXTRUDER)
	#M117 HEATING BED
    M190 S{T_BED}
	#M117 Heating Tool 
    M109 S{T_EXTRUDER}
    G90
    {% if not params.PA %}
		{% set PA = printer.configfile.settings.extruder.pressure_advance %}
	{% endif %}
	SET_PRESSURE_ADVANCE ADVANCE={PA}
    #M117 HOMING
    {% if printer.homed_axes != 'XYZ' %}
        G28 
    {% endif %}
    #M117 Bed Mesh
    # G29				<<< what is the point of creating a new mesh?
	BED_MESH_PROFILE LOAD=default
    ;G0 F600 Z10		<<< it is already homed at this point, why move Z?
    ;G0 X10.1 Y0 F1200	<<< it is already homed, why move X & Y?
    #M117 Purge
    PURGE
    #M117 Printing



#[gcode_macro HEAT_BED]    
#variable_parameter_T_BED: 60
#gcode:
#    {% set tb = printer.heater_bed.target|default(60)|float %}
#    M117 Heating Bed
#    ;G92 E0
#    # Move Z Axis up
#    ;G1 Z5.0 F3000  
#    M190 S{tb}

#[gcode_macro HEAT_TOOL]    
#variable_parameter_T_EXTRUDER: 200
#gcode:
#    {% set T_EXTRUDER = printer.extruder.target|default(200)|float %}
#    M117 Heating Tool
#    #G92 E0
##    # Move Z Axis up
#    #G1 Z5.0 F3000  
#    M109 S{T_EXTRUDER}

    
[gcode_macro PURGE]
gcode:
    #variable_parameter_T_EXTRUDER: 190
    G1 X10.1 Y20 Z0.28 F5000.0
    ;M109 S{T_EXTRUDER}
    # Reset Extruder
    G92 E0
    # Move Z Axis up
    G1 Z5.0 F3000
    # purge 
    G1 F1200 E15
    ;M117 PURGE LINE
    ## Move to start position
    
    # Draw the first line
    G1 X10.1 Y200.0 Z0.28 F1500.0 E30
    # Move to side a little
    G1 X10.8 Y200.0 Z0.28 F5000.0
    # Draw the second line
    G1 X10.8 Y20 Z0.28 F1500.0 E45
    # Reset Extruder
    G92 E0
    # fan on
    M106 S255
    # Move Z Axis up
    G1 F1500 Z25.0 
    # PULL OF BLOBS
    G1 F3000 Z5.0
    # FAN OFF
    M107
    #SET_PRESSURE_ADVANCE ADVANCE={ params.PA|default(.038) } #0.061
    #pressure_advance =0.038#0.061
    # Print message on LCD
    ;M117 Print started
# --------------------------------------------------------------------

# ---------------------------- End Print -----------------------------
[gcode_macro END_PRINT]
variable_machine_depth: 270
gcode:
    M104 S0 ;extruder heater off
    M140 S0 ;heated bed heater off (if you have it)
    M106 S0 ;FAN OFF
    G91 ;relative positioning
    G1 E-3 F300  ;retract the filament a bit before lifting the nozzle, to release some of the pressure
    M117 RETRACT
    G1 Z+0.5 E-3 X-10 Y-10 F9000 ;move Z up a bit and retract filament even more
    G1 E-10
    M117 WIPE OUT
    G90
    {% set axismax = printer.toolhead.axis_maximum %}
	{% set pos     = printer.toolhead.position     %}
	
	#Move toolhead away from finished print
	{% if pos.z <= ( axismax.z - 40 ) %}
		G1 Z{ pos.z + 10 }
        G28 X0;
        G1 Y{axismax.y - 10}
    {% else %}
		G1  Z{ axismax.z }
	    G28 X0;
        G1 Y{axismax.y - 10}  
    {% endif %}
    M117 PRESENT ITEM
    #G1 X0 Y{params.machine_depth-10}
    # Disable steppers
    M84
    # Print message on LCD
    M117 MOTORS OFF

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT



[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(20) %}      #edit to your park position
    {% set y = params.Y|default(20) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{e} F2100
    G1 Z{z_safe}
    G90
    G1 X{x} Y{y} F6000


[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    G91
    G1 E{e} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME

##############bed temperature mesh#####

[gcode_macro LOAD_MESH_TEMP]
variable_BED_TEMPERATURE: 60
variable_parameter_FORCE: 1
gcode:
    {printer.gcode.action_respond_info("- AUTOMATED BED MESH GENERATOR -")}
    {% if printer.heater_bed.target|int < 60 %}
        {printer.gcode.action_respond_info("Your bed temp is to low, make sure it is at least 60 or higher")}
    {% else %}
        {% if printer.configfile.config["bed_mesh " + printer.heater_bed.target] is defined and FORCE|int == 0 %}
            G28 #remove line if you ran G28 before starting this macro
            BED_MESH_PROFILE LOAD={printer.heater_bed.target}
            {printer.gcode.action_respond_info("Succesfully loaded bed_mesh "+ printer.heater_bed.target)}
        {% else %}
            {% if printer.configfile.config["bed_mesh " + printer.heater_bed.target] is defined and FORCE|int == 1 %}
                BED_MESH_PROFILE REMOVE={printer.heater_bed.target}
            {% endif %}
            {printer.gcode.action_respond_info("bed_mesh not defined, your bed temperature will go up!")}
            {printer.gcode.action_respond_info("We will probe the bed and save the mesh as bed_mesh "+ printer.heater_bed.target)}
            ADD_BED_MESH TARGET_TEMP={printer.heater_bed.target}
        {% endif %}
    {% endif %}

[gcode_macro ADD_BED_MESH]
#default_parameter_TARGET_TEMP: 60
gcode:
    M190 S{printer.heater_bed.target} # Wait for the bed to hit TARGET_TEMP
    G28 #remove line if you ran G28 before starting this macro
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE={printer.heater_bed.target}



[gcode_macro SAVE_AT_END]
variable_save: 0
gcode:
    SET_GCODE_VARIABLE MACRO=SAVE_AT_END VARIABLE=save VALUE=1

[gcode_macro SAVE_IF_SET]
gcode:
    {% if printer["gcode_macro SAVE_AT_END"].save == 1 %}
    {printer.gcode.action_respond_info("Saving was requested - saving and restarting now")}
    SAVE_CONFIG
    {% endif %}

[gcode_macro BED_SCREWS]
gcode:
    #G28
    SCREWS_TILT_CALCULATE 
    
[gcode_macro LOAD_FILAMENT]
gcode:
    {% if printer.extruder.temperature|int < 180 %} #check extruder temp
        M109 S190
    {% endif %}
    G90 #absolute
    G21 #metric
    G92 E0
    G1 F1200 E40 #feed might be to agressive
    G29 E0
    M117 LOADED

[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% if printer.extruder.temperature|int < 180 %}
        M109 S190
    {% endif %}
    G21
    G91 #relative position
    G1 F1200 E10 #feed a bit of filament to avoid blob
    G4 P200# dwell for a bit
    G1 F2400 E-80 # pull fillament clear , may be a bit long
    G90 # back to absolute
    G92 E0 # reset extruder


[gcode_macro M600]   ###change filament
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state    


[gcode_macro SEARCH_VARS]
gcode: #type search_vars s=profile in terminal
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
                
            {% endfor %}
        {% endif %} 
    {% endfor %}

#[gcode_macro SCREWS_TILT_CALCULATE]
#gcode:
    #G28
    #SCREWS_TILT_CALCULATE MAX_DEVIATION=1.00 #set large as bed foo-bared
    #SCREWS_TILT_CALCULATE 
################################################################################
################################################################################
